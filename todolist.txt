Objectifs

--- TODO LIST ---

*Main thread. Qui crée les structures d'échanges de données et sert d'intermédiaires entre les échangeur et les véhicules
de sorte a réguler le trafic. 


*threads representant les voitures.
chaque thread porte les infos suivantes : 
-type de véhicule /*DONE*/
-vitesse (a faire plus tard)
-position /*DONE*/
-itiniéraire /*DONE*/
-autres ?

*echangeurs représenté par des ressources critiques
infos dispo a l'échangeur :
-nb total de véhicule (DONE)
-files d'attente pour chaque direction (DONE)
-pointeurs sur la prochaine file d'attente ?


a créer en plusieurs version :
- 1 seul véhicule peut passer dans l'échangeur peut importe la direction
- plusieurs véhicules peuvent passer si ils ne se croisent pas

/-\ créer différentes file d'attente : pour chaque direction d'attente (N,E,S,O) 1 file pour chaque direction de sortie.
Choix de la file d'attente avec un round robin avec priorisations ?

Une liste d'attente c'est : 

-un tableau dans lequel on peut faire :
*récupérer le véhicule en tete et décaler les autres véhicules
-un truc qui dit combien de véhicules sont en attente
-un truc qui retient quand elle a été utilisé pour la denrière fois.

*stratégie de passages :
-prioriser les véhicules prioritaires
-limiter le temps d'attente des autres véhicules 
-fluidifier le trafic 


-> Les véhicules doivent signaler leur présence en arrivant dans un échangeur et indiquer quand ils partent.

Travail pour 100Triques(essaye de le faire d'ici ce week-end) : 

- créer la fonction enter_interchange  ( void enter_interchange(long numVehicule); )
Elle doit ajouter dans la structure (les bonnes files d'attente) des echangeurs l'id des véhicules. 
Utilise les fonctions de la structure liste attente (ça permettra de la tester)

Travail pour DUDUL : 

- gestion des ressources critiques (acces aux échangeurs)

Travail quand terminé : 

-Gérer le round robin dans les files d'attente.
-Gérer les priorités

En bonus : créer des fichiers .c et .h différents (eventuellement des bibliothéques lors de la compilation)
